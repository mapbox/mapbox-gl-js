version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.4.0
  browser-tools: circleci/browser-tools@1.1.1

workflows:
  version: 2
  default:
    jobs:
      - prepare:
          filters:
            tags:
              only: /.*/
      - lint:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
      - test-flow:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
      - test-unit:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
      - test-render:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
      - test-render-prod:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
      - test-query:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
      - test-expressions:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
      - test-browser:
          requires:
            - prepare
          filters:
            tags:
              only: /.*/
      - test-webpack:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - collect-stats:
          requires:
            - build
          filters:
            tags:
              ignore: /.*/
            branches:
              only: main
      - deploy-benchmarks:
          requires:
            - lint
            - build
            - test-flow
            - test-unit
            - test-render
            - test-render-prod
            - test-query
            - test-expressions
          filters:
            tags:
              only: /v[0-9]+.[0-9]+.[0-9]+(-.+)?/
            branches:
              only:
                - main
                - /release-.*/
      - deploy-release:
          requires:
            - lint
            - build
            - test-flow
            - test-unit
            - test-render
            - test-render-prod
            - test-query
            - test-expressions
          filters:
            tags:
              only: /v[0-9]+.[0-9]+.[0-9]+(-.+)?/
            branches:
              ignore: /.*/


defaults: &defaults
  docker:
    - image: cimg/node:14.15-browsers
  working_directory: ~/mapbox-gl-js

jobs:
  prepare:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v4-yarn-{{ checksum "yarn.lock" }}
      - run: yarn
      - save_cache:
          key: v4-yarn-{{ checksum "yarn.lock" }}
          paths:
            - '~/.yarn'
            - 'node_modules'
      - persist_to_workspace:
          root: .
          paths:
            - .

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v2-lint-{{ .Branch }}
            - v2-lint
      - run: yarn run lint
      - run: yarn run lint-docs
      - run: yarn run lint-css
      - save_cache:
          key: v2-lint-{{ .Branch }}-{{ .Revision }}
          paths:
            - '.eslintcache'

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: yarn run build-prod-min
      - run: yarn run build-prod
      - run: yarn run build-csp
      - run: yarn run build-dev
      - run: yarn run build-css
      - run: yarn run build-style-spec
      - run: yarn run build-flow-types
      - run: yarn run test-build
      - run:
          name: Check bundle size
          command: |
            node build/check-bundle-size.js
      - deploy:
          name: Trigger memory metrics when merging to main
          command: |
            if [ -n "${WEB_METRICS_TOKEN}" ]; then
              if [[ $CIRCLE_BRANCH == main ]]; then
                curl -X POST https://circleci.com/api/v1.1/project/github/mapbox/web-metrics/build?circle-token=${WEB_METRICS_TOKEN}
              fi
            fi
      - store_artifacts:
          path: "dist"
      - store_artifacts:
          path: "test/release"
      - persist_to_workspace:
          root: .
          paths:
            - dist

  test-flow:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: yarn run test-flow

  test-unit:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: yarn run test-unit

  test-render:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - browser-tools/install-chrome
      - run: yarn run test-render
      - store_test_results:
          path: test/integration/render-tests
      - store_artifacts:
          path: "test/integration/render-tests/index.html"

  test-render-prod:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - browser-tools/install-chrome
      - run: yarn run test-render-prod
      - store_test_results:
          path: test/integration/render-tests
      - store_artifacts:
          path: "test/integration/render-tests/index.html"

  test-query:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - browser-tools/install-chrome
      - run: yarn run test-query
      - store_test_results:
          path: test/integration/query-tests
      - store_artifacts:
          path: "test/integration/query-tests/index.html"

  test-webpack:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build Webpack
          command: |
            cd ./test/build/transpilation &&
            yarn &&
            npm run build &&
            rm -rf node_modules
      - store_artifacts:
          path: "test/build/transpilation"

  collect-stats:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - browser-tools/install-chrome
      - run:
          name: Collect performance stats
          command: node bench/gl-stats.js
      - aws-cli/install
      - run:
          name: Upload performance stats
          command: aws s3 cp data.json.gz s3://mapbox-loading-dock/raw/gl_js.perf_metrics_staging/ci/`git show -s --date=short --format=%cd-%h HEAD`.json.gz

  test-browser:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - browser-tools/install-browser-tools
      - run: yarn run build-dev
      - run: yarn run build-token
      - run:
          name: Test Chrome
          environment:
            SELENIUM_BROWSER: chrome
            TAP_COLORS: 1
          command: yarn run test-browser
      - run:
          name: Test Firefox
          environment:
            SELENIUM_BROWSER: firefox
            TAP_COLORS: 1
          command: yarn run test-browser

  test-expressions:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: yarn run test-expressions

  deploy-benchmarks:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build
          command: BENCHMARK_VERSION="${CIRCLE_TAG:-$CIRCLE_BRANCH} $(git rev-parse --short=7 HEAD)" yarn run build-benchmarks
      - aws-cli/install
      - run:
          name: Upload benchmark
          command: aws s3 cp --acl public-read --content-type application/javascript bench/versions/benchmarks_generated.js s3://mapbox-gl-js/${CIRCLE_TAG:-$CIRCLE_BRANCH}/benchmarks.js
      - run:
          name: Upload source maps
          command: aws s3 cp --acl public-read --content-type application/javascript bench/versions/benchmarks_generated.js.map s3://mapbox-gl-js/${CIRCLE_TAG:-$CIRCLE_BRANCH}/benchmarks.js.map

  deploy-release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - aws-cli/install
      - run:
          name: Check build file for correct SDK version
          command: |
            if grep -q "\"${CIRCLE_TAG:1}\"" ./dist/mapbox-gl.js; then
              echo SDK version in mapbox-gl.js matches ${CIRCLE_TAG:1}
            else
              echo SDK version in mapbox-gl.js does not match ${CIRCLE_TAG:1}
              exit 1
            fi
      - run:
          name: Deploy release
          command: |
            bash ./build/upload.sh
