/* eslint-disable import/unambiguous */
const tap = require('tap');
const sinon = require('sinon');

module.exports = tap;

tap.Test.prototype.addAssert('equalWithPrecision', 3, assertEqualWithPrecision);

function assertEqualWithPrecision(expected, actual, multiplier, message, extra) {
    message = message || `should be equal to within ${multiplier}`;
    const expectedRounded = Math.round(expected / multiplier) * multiplier;
    const actualRounded = Math.round(actual / multiplier) * multiplier;

    return this.equal(expectedRounded, actualRounded, message, extra);
}

tap.beforeEach(function (done) {
    this.sandbox = sinon.sandbox.create({
        injectInto: this,
        properties: ['spy', 'stub', 'mock']
    });

    const consoleError = console.error;
    console.error = () => {
        this.fail(`console.error called -- please adjust your test (maybe stub console.error?)`);
    };
    console.error.previous = consoleError;

    const consoleWarn = console.warn;
    console.warn = () => {
        this.fail(`console.warn called -- please adjust your test (maybe stub console.warn?)`);
    };
    console.warn.previous = consoleWarn;

    done();
});

tap.afterEach(function (done) {
    console.error = console.error.previous;
    console.warn = console.warn.previous;
    this.sandbox.restore();
    done();
});
